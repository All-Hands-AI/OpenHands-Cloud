name: Validate Chart Versions

on:
  workflow_call:
    inputs:
      base_ref:
        description: 'Base reference for comparison (e.g., HEAD~1 for push, origin/main for PR)'
        required: false
        type: string
        default: 'HEAD~1'
      enforce_version_bump:
        description: 'Whether to enforce version bump for changed charts'
        required: false
        type: boolean
        default: true

jobs:
  validate-chart-versions:
    runs-on: ubuntu-latest
    env:
      YQ_VERSION: 'v4.47.1'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Need full history for comparison

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/${{ env.YQ_VERSION }}/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Check for chart changes and validate version bumps
        run: |
          echo "Comparing against: ${{ inputs.base_ref }}"

          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only ${{ inputs.base_ref }}...HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"

          # Dynamically discover all chart directories
          CHART_DIRS=()
          for dir in charts/*/; do
            if [ -f "${dir}Chart.yaml" ]; then
              # Remove trailing slash
              chart_dir="${dir%/}"
              CHART_DIRS+=("$chart_dir")
            fi
          done

          echo "Found chart directories: ${CHART_DIRS[@]}"

          # Track if any validation failed
          VALIDATION_FAILED=false

          for chart_dir in "${CHART_DIRS[@]}"; do
            # Check if any files in this chart directory were changed
            if echo "$CHANGED_FILES" | grep -q "^${chart_dir}/"; then
              echo "Changes detected in ${chart_dir}, validating version..."

              # Get current version
              CURRENT_VERSION=$(yq e '.version' "${chart_dir}/Chart.yaml")
              echo "Current version: $CURRENT_VERSION"

              # Get base version
              BASE_VERSION=$(git show ${{ inputs.base_ref }}:"${chart_dir}/Chart.yaml" | yq e '.version' -)
              echo "Base version: $BASE_VERSION"

              # Check if version bump is required
              if [ "${{ inputs.enforce_version_bump }}" = "true" ]; then
                # Compare versions (simple string comparison for now)
                if [ "$CURRENT_VERSION" = "$BASE_VERSION" ]; then
                  echo "❌ ERROR: Chart ${chart_dir} has changes but version was not bumped!"
                  echo "   Current version: $CURRENT_VERSION"
                  echo "   Base version: $BASE_VERSION"
                  echo "   Please increment the version in ${chart_dir}/Chart.yaml"
                  VALIDATION_FAILED=true
                else
                  echo "✅ Version bumped for ${chart_dir}: $BASE_VERSION → $CURRENT_VERSION"
                fi
              else
                # Just inform about version status
                if [ "$CURRENT_VERSION" = "$BASE_VERSION" ]; then
                  echo "⚠️ WARNING: Chart ${chart_dir} has changes but version was not bumped"
                  echo "   Current version: $CURRENT_VERSION"
                  echo "   Base version: $BASE_VERSION"
                else
                  echo "✅ Version changed for ${chart_dir}: $BASE_VERSION → $CURRENT_VERSION"
                fi
              fi
            else
              echo "No changes in ${chart_dir}, skipping version validation"
            fi
          done

          if [ "$VALIDATION_FAILED" = true ]; then
            echo ""
            echo "Version validation failed! Please bump the chart versions for all modified charts."
            exit 1
          fi

          echo "All chart version validations passed!"