nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  repository: ghcr.io/all-hands-ai/runtime-api
  tag: sha-07c8732
  pullPolicy: Always

imagePullSecrets:
  - name: ghcr-login-secret

serviceAccount:
  create: true
  name: runtime-api-sa
  annotations: {}
  createRBAC: true

runtimeInSameCluster: false
defaultAPIKeySecretName: default-api-key

service:
  type: ClusterIP
  port: 5000

env:
  PYTHONDONTWRITEBYTECODE: "1"
  PYTHONUNBUFFERED: "1"
  DEV_MODE: "false"
  ARTIFACT_REGISTRY_REPOSITORY: "runtime-api-docker-repo"
  ARTIFACT_REGISTRY_LOCATION: "us-central1"
  GCP_REGION: "us-central1"
  STORAGE_CLASS: "standard-rwo"
  INCLUDE_START_PROBE: "true"
  INCLUDE_LIVENESS_PROBE: "true"
  RUNTIME_CLASS: "sysbox-runc"

resources:
  limits:
    cpu: 1
    memory: 4Gi
  requests:
    cpu: 1
    memory: 4Gi

# Health check probes configuration
probes:
  liveness:
    enabled: true
    path: /health
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readiness:
    enabled: true
    path: /health
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
  startup:
    enabled: true
    path: /health
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30

# Security context settings for all pods
securityContext:
  runAsUser: 1000

# Additional annotations for deployment
deploymentAnnotations: {}

# Additional annotations for pods
podAnnotations: {}

# Topology spread constraints for better pod distribution
topologySpreadConstraints: []
# Example:
# - maxSkew: 1
#   topologyKey: kubernetes.io/hostname
#   whenUnsatisfiable: DoNotSchedule
#   labelSelector:
#     matchLabels:
#       app.kubernetes.io/name: runtime-api

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  enabled: false
  isFeatureDeploy: false
  primary:
    persistence:
      enabled: false
  auth:
    username: postgres
    password: "" # This should be set externally for security reasons
    existingSecret: postgres-password
    database: runtime_api_db
  service:
    ports:
      postgresql: 5432
  image:
    repository: bitnamilegacy/postgresql

externalDatabase:
  enabled: false
  existingSecret: postgres-password

# External database configuration (used when postgresql.enabled=false)
database:
  create: false # Will only be true for AWS as it can't create the DB in terraform
  secretName: runtime-api-db-credentials # Secret containing external database credentials
  poolSize:
    api: 5 # Pool size for API deployment (default)
    cronjobs: 2 # Pool size for cronjobs (default)
  maxOverflow:
    api: 10 # Max overflow for API deployment (default)
    cronjobs: 5 # Max overflow for cronjobs (default)

helm-release-pruner:
  enabled: false
  job:
    schedule: "0 */4 * * *"
    dryRun: False
  pruneProfiles:
    - olderThan: "1 days ago"
      helmReleaseFilter: "^runtime-api-.*$"
      namespaceFilter: "^runtime-api-.*$"
      maxReleasesToKeep: 10

certificate:
  enabled: false

ingress:
  enabled: false
  host: chart-example.local
  className: traefik
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
  path: /
  pathType: Prefix
  tls: true

# Base ingress configuration for runtime ingress inheritance
# Only metadata (labels and annotations) will be inherited, not the spec
ingressBase:
  enabled: false
  apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: base-ingress
    labels:
      app: runtime-api
      environment: production
      team: platform
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 6
  targetCPUUtilizationPercentage: 75

# Pod Disruption Budget for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: 1
  # maxUnavailable: 1  # Alternative to minAvailable

cleanup:
  enabled: true
  schedule: "*/5 * * * *"
  idle_seconds: 1800 # Default to 30 minutes
  dead_seconds: 86400 # Default to 1 day

warmRuntimes:
  enabled: false
  configMapName: warm-runtimes-config
  count: 0
  configs:
    - name: default
      image: "ghcr.io/all-hands-ai/runtime:3c39b93f7e151f88e7b4274b80aafa604fcae092-nikolaik"
      working_dir: "/openhands/code/"
      environment: {}
      command:
        - /openhands/micromamba/bin/micromamba
        - run
        - -n
        - openhands
        - poetry
        - run
        - python
        - -u
        - -m
        - openhands.runtime.action_execution_server
        - "60000"
        - --working-dir
        - /workspace
        - --plugins
        - agent_skills
        - jupyter
        - vscode
        - --username
        - root
        - --user-id
        - "0"

# Database cleanup CronJob configuration
dbCleanup:
  enabled: true
  schedule: "0 0 * * *" # Run daily at midnight
  retentionDays: 90 # Number of days to retain runtime objects
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1

# Pod Status Logger configuration
podStatusLogger:
  enabled: true
  schedule: "*/5 * * * *" # Run every 5 minutes

monitoring:
  enabled: true
  # ServiceMonitor for Prometheus Operator
  serviceMonitor:
    enabled: true
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    annotations: {}
    metricRelabelings: []
    relabelings: []

datadog:
  enabled: false
  env: "dev"

global:
  security:
    # This allows using the bitnamilegacy image repo.
    # See: https://github.com/bitnami/containers/issues/83267
    allowInsecureImages: true
