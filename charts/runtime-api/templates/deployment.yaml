apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "runtime-api.fullname" . }}
  labels:
    {{- include "runtime-api.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "runtime-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "runtime-api.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.warmRuntimes.enabled }}
        - name: warm-runtimes-config
          configMap:
            name: {{ .Values.warmRuntimes.configMapName }}
      {{- end }}
      {{- if .Values.ingressBase.enabled }}
        - name: ingress-base-config
          configMap:
            name: {{ include "runtime-api.fullname" . }}-ingress-base
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.datadog.enabled }}
          command: ["/bin/sh", "-c", "ddtrace-run python -m flask run --host=0.0.0.0"]
          {{- else }}
          command: ["/bin/sh", "-c", "python -m flask run --host=0.0.0.0"]
          {{- end }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.probes.startup.path }}
              port: http
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
          {{- end }}
          env:
            {{- include "runtime-api.env" . | nindent 12 }}
            - name: DB_POOL_SIZE
              value: {{ .Values.database.poolSize.api | default 5 | quote }}
            - name: DB_MAX_OVERFLOW
              value: {{ .Values.database.maxOverflow.api | default 10 | quote }}
            {{- if .Values.defaultAPIKeySecretName }}
            - name: DEFAULT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.defaultAPIKeySecretName }}
                  key: default-api-key
            {{- end }}
            
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: admin-password
                  key: admin-password
            

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.warmRuntimes.enabled .Values.ingressBase.enabled }}
          volumeMounts:
          {{- if .Values.warmRuntimes.enabled }}
            - name: warm-runtimes-config
              mountPath: /config
          {{- end }}
          {{- if .Values.ingressBase.enabled }}
            - name: ingress-base-config
              mountPath: /ingress-base
          {{- end }}
          {{- end }}
